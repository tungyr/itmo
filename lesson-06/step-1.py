# Ввод и вывод потоки

"""
0 - stdin - стандартный поток ввода
    input()    (str)
    sys.stdin (bytes) # sys - для работы с потоками данных
1 - stdout - стандартный поток ввода
    print()
    sys.stdout   - выводит (bytes)
2 - stderr - стандартный поток ошибок
    Исключения (raise)
    sys.stderr

    # stdin может быть stdout-ом другой программы или файл
    могут понадобиться если нужно будет сделать прогресс бар в консоли
"""


# Файловый ввод и вывод

"""
open(path[, mode]) # открывание файла, mode - режим открытия файла

Как открыть файл в режиме записи?

w - перезапись
    файл не существует  -> создается
    файл существует     -> перезаписывается
a - дозапись в конец файла
    файл не существует  -> создается
    файл существует     -> дозаписывается в конец
x - эксклюзивное создание файла (почти не используется)
    файл не существует  -> создается
    файл существует     -> исключение (ошибка)

лучше исп-ть режим w с проверкой наличия файла ч-з функцию
Любой внешний ресурс надо закрывать, использовать контекстный менеджер

Как открыть файл в режиме чтения?

r - нужно делать проверку - файл не существует или нет прав -> исключение(ошибка)
w+, a+ - режимы записи с возможностью чтения.
.....
t - текстовый режим работы с файлом (используется по умолчанию), записывает только
юникодные строчки (str)
b - бинарный режим, можно записывать в нетекстовые файлы, записывать в байтах (bytes)
U -
"""

with open('out.txt', 'w') as f: # открытие с помощью контекстного менеджера
    f.write('123\r\n')  # \r\n - перенос строки в Windows
    f.write('4\t56') # 123456
    f.write('''
    q
    a
    z
    ''')    # сохранение синтаксиса с помощью '''

    f.writelines(['A\n','D']) # записывает списки
    #f.write(666)    # выдаст ошибку, 666 - число
    f.write(str(666 + 1))
    
# Как открыть файл в режиме чтения?

#with open('out.txt', 'r') as f:
with open('out.txt') as f: # правильное открытие, r по умолчанию
    print('Прочитать файл в строку:\n{}'.format(
        f.read()
    ))

    f.seek(0)   # смещение в байтах он начала файла

    print('Прочитать файл в список:\n{}'.format(
        f.readlines() # ничего не выдаст, потому что курсор в файле в конце
        ))

    f.seek(0)

    print('Прочитать файл построчно:\n{}'.format(
        f.readline()   # по окончании строчек возвращает пустую строчку
        ))

    for line in f:
       print(line)

# +++ далее использовать в двоичном режиме:

    f.seek(0)

    print('Прочитать из файла N байт:\n{}'.format(
        f.read(6)  # без аргументов читает от 0 до конца файла
        ))

    print('Позиция курсора:\n{}'.format(f.tell()))

    # кириллица - 1 символ - 2 байта, латиница - 1 символ -2 байта.
    # поэтому лучше никогда не читать текстовый файл побайтово
    # в текстовых файлах читать только через f.read() - без аргументов!
